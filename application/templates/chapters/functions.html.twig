<h1>Functions</h1>
<hr/>

<h3>What are Functions?</h3>
<p>Functions are a convenient way to divide your code into useful blocks, allowing us to order our code, make it more readable, reuse it and save some time. Also functions are a key way to define interfaces so programmers can share their code.</p>
<h3>How do you write functions in Python?</h3>
<p>As we have seen on previous tutorials, Python makes use of blocks.</p>
<p>A block is a area of code of written in the format of:</p>
<pre>
                        <code>block_head:
                            1st block line
                            2nd block line
                            ...
                        </code>
                    </pre>
<p>Where a block line is more Python code (even another block), and the block head is of the following format:
    block_keyword block_name(argument1,argument2, ...)
    Block keywords you already know are "if", "for", and "while".</p>
<p>Functions in python are defined using the block keyword "def", followed with the function's name as the block's name.
    For example:</p>
<pre>
                        <code>def my_function():
                            print("Hello From My Function!")
                        </code>
                    </pre>
<p>Functions may also receive arguments (variables passed from the caller to the function).
    For example:</p>
<pre>
                        <code>def my_function_with_args(username, greeting):
                            print("Hello, %s , From My Function!, I wish you %s"%(username, greeting))
                        </code>
                    </pre>
<p>Functions may return a value to the caller, using the keyword- 'return' .
    For example:</p>
<pre>
                        <code>def sum_two_numbers(a, b):
                            return a + b
                        </code>
                    </pre>
<h3>How do you call functions in Python?</h3>
<p>Simply write the function's name followed by (), placing any required arguments within the brackets.
    For example, lets call the functions written above (in the previous example):</p>
<pre>
                        <code># Define our 3 functions
                        def my_function():
                            print("Hello From My Function!")

                        def my_function_with_args(username, greeting):
                            print("Hello, %s , From My Function!, I wish you %s"%(username, greeting))

                        def sum_two_numbers(a, b):
                            return a + b

                        # print(a simple greeting)
                        my_function()

                        #prints - "Hello, John Doe, From My Function!, I wish you a great year!"
                        my_function_with_args("John Doe", "a great year!")

                        # after this line x will hold the value 3!
                        x = sum_two_numbers(1,2)
                        </code>
                    </pre>
<h2>Exercise</h2>
<p>In this exercise you'll use an existing function, and while adding your own to create a fully functional program.</p>
<ol>
    <li>
        <p>
            Add a function named
            <code>list_benefits()</code>
            that returns the following list of strings: "More organized code", "More readable code", "Easier code reuse", "Allowing programmers to share and connect code together"
        </p>
    </li>
    <li>
        <p>
            Add a function named
            <code>build_sentence(info)</code>
            which receives a single argument containing a string and returns a sentence starting with the given string and ending with the string " is a benefit of functions!"
        </p>
    </li>
    <li>
        <p>Run and see all the functions work together!</p>
    </li>
</ol>